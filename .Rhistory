2. _params_: this slot is a _DEPLPar_ object which contains the parameters of the _Length-Weight_ relationship and the parameters of the _Growth_ function of the octopus.
3. _zones_: this slot is a _DEPLZone_ object. To have access to it we can use the following _script_:
```{r,fig.align='center',fig.width=8,fig.height=6}
zone <- zones(sim)
# Get the names of zones
names(zone)
# plot the proportion of initial abundance in each zone
plot(zone)
```
To get the fleets exploiting the zones we type:
```{r}
# Get the fleets exploiting the zones
fleet <- fleet(zone)
# To obtain names of each fleet
names(fleet)
# To obtain the catchability of each fleet
catchability(fleet)
# To display the Fleets with their catchabilities in a data.frame
as.data.frame(fleet)
```
The last five fields of the DEPLSim object _sim_ are _catch.n__, _catch.wt_, _stock.n_, _stock.wt_ and _cpue_. These could be accessed with:
```{r}
catch.n(sim)
catch.wt(sim)
stock.n(sim)
stock.wt(sim)
index(sim)
```
As you can see, these objects are empty, so to have them full, we have to run the simulation model using _run_ method:
```{r,echo=FALSE,cache=TRUE,results='hide'}
sim <- run(sim)
```
```{r}
# sim <- run(sim)
```
After runing the model you can se that the empty feilds are now having values. To ge summaries of the stock abundance, biomass, the catch in numbers and weight, and the cpue we use the following _script_:
```{r}
# Computing a summary of the catch in numbers
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
cpue <- summary(object = sim,"cpue")
head(catchN)
```
```{r,fig.width=7,fig.height=4}
library(ggplot2)
ggplot(cpue, aes(week, median, fill = fleet)) +
geom_bar(position = "dodge",stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("CPUE of different fleets in the different zones")
```
```{r,fig.width=7,fig.height=4}
ggplot(stockN, aes(week, median)) +
geom_bar(aes(fill=median),stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance")
```
```{r,fig.width=7,fig.height=4}
ggplot(stockWT, aes(week, median)) +
geom_bar(aes(fill=median),stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Biomass (t)")
```
```{r,fig.width=7,fig.height=4}
library(plyr)
library(reshape2)
abundance <- stock.n(sim)
cpue <- index(sim)
dtN <- adply(.data = abundance,.margins = c(1,2,3),.fun = identity)
names(dtN) <- c("iter","week","zone","value")
ggplot(dtN, aes(week, value)) +
geom_boxplot() +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance ")
biomass <- stock.wt(sim)
dtB <- adply(.data = biomass,.margins = c(1,2,3),.fun = identity)
names(dtB) <- c("iter","week","zone","value")
ggplot(dtB, aes(week, value)) +
geom_boxplot() +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Biomass")
```
```{r}
```
cpue <- index(sim)
dtcpue <- adply(.data = cpue,.margins = c(1,2,3,4),.fun = identity)
View(dtcpue)
names(dtcpue) <- c("iter","week","fleet","zone","value")
View(dtcpue)
ggplot(dtcpue, aes(week, value)) +
geom_boxplot() +
facet_grid(facets = zone~fleet,scales="free_y") +
ggtitle("CPUE")
ggplot(dtcpue, aes(week, value)) +
geom_boxplot() +
facet_grid(facets = zone~fleet,scales="free") +
ggtitle("CPUE")
ggplot(dtcpue, aes(week, value)) +
geom_boxplot() +
facet_wrap(facets = zone~fleet,scales="free") +
ggtitle("CPUE")
catchn <- catch.n(sim)
dtcatchn <- adply(.data = cpue,.margins = c(1,2,3,4),.fun = identity)
names(dtcatchn) <- c("iter","week","fleet","zone","value")
ggplot(dtcatchn, aes(week, value)) +
geom_boxplot() +
facet_wrap(facets = zone~fleet,scales="free") +
ggtitle("Catch in Number")
catchn <- catch.n(sim)
dtcatchn <- adply(.data = catchn,.margins = c(1,2,3,4),.fun = identity)
names(dtcatchn) <- c("iter","week","fleet","zone","value")
ggplot(dtcatchn, aes(week, value)) +
geom_boxplot() +
facet_wrap(facets = zone~fleet,scales="free") +
ggtitle("Catch in Number")
catchwt <- catch.wt(sim)
dtcatchwt <- adply(.data = catchwt,.margins = c(1,2,3,4),.fun = identity)
names(dtcatchwt) <- c("iter","week","fleet","zone","value")
ggplot(dtcatchwt, aes(week, value)) +
geom_boxplot() +
facet_wrap(facets = zone~fleet,scales="free") +
ggtitle("Yeild")
library(DEPLr)
x <- rnorm(1000)
x <- as.data.frame(x)
library(plyr)
adply(x,.margins = 1,.fun = quantile(probs = 0.025))
adply(x,.margins = 1,.fun = quantile(x = x,probs = 0.025))
adply(x,.margins = 1,summarize,quantile(x = x,probs = 0.025))
x <- rnorm(100)
x <- as.data.frame(x)
adply(x,.margins = 1,summarize,quantile(x = x,probs = 0.025))
library(DEPLr)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
class(sim)
sim <- run(sim)
cpue <- summary(object = sim,"cpue")
tt <- adply(object@cpue,c(2,3,4),summarize,quantile(x =object@cpue,probs = 0.025));names(tt)[4] <- "2.5%"
tt <- adply(sim@cpue,c(2,3,4),summarize,quantile(x =sim@cpue,probs = 0.025));names(tt)[4] <- "2.5%"
kk <- adply(.data = sim@cpue,.margins = c(2,3,4),.fun = mean)
View(kk)
install.packages("ddply")
library(DEPLr)
direc <- "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté"
direc <- "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté"
library(DEPLr)
sim=DEPLSim(file = paste(direc,"input files/Eté2014.inp",sep="/"))
class(sim)
sim <- run(sim)
library(DEPLr)
sim=DEPLSim(file = paste(direc,"input files/Eté2014.inp",sep="/"))
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
cpue <- summary(object = sim,"cpue")
View(cpue)
View(stockN)
setwd(dir = paste(direc,"Results/Data",sep="/"))
write.csv(catchN,"catchN.csv")
write.csv(catchWT,"catchWT.csv")
write.csv(stockN,"stockN.csv")
write.csv(stockWT,"stockWT.csv")
write.csv(cpue,"cpue.csv")
setwd(dir = paste(direc,"Results/Graph",sep="/"))
library(ggplot2)
ggplot(cpue, aes(week, median, fill = fleet)) +
geom_bar(position = "dodge",stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("CPUE of different fleets in the different zones")
ggsave(filename = "CPUE.jpeg",width = 20,height = 14,units = "cm")
ggplot(stockN, aes(week, median)) +
geom_bar(aes(fill=median),stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance")
ggplot(stockWT, aes(week, median)) +
geom_bar(aes(fill=median),stat="identity") +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Biomass (t)")
library(plyr)
library(reshape2)
library(DEPLr)
abundance <- stock.n(sim)
cpue <- index(sim)
dtN <- adply(.data = abundance,.margins = c(1,2,3),.fun = identity)
names(dtN) <- c("iter","week","zone","value")
ggplot(dtN, aes(week, value)) +
geom_boxplot() +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance ")
x <- rnorm(10000)
mean(x)
plot(x)
ggplot(dtN, aes(week, value)) +
geom_boxplot() + geom_point()
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance ")
ggplot(dtN, aes(week, value)) +
geom_boxplot() + geom_point() +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance ")
ggplot(dtN, aes(week, value)) +
geom_boxplot() + geom_point() +
facet_grid(facets = zone~.,scales="free_y") +
ggtitle("Abundance ")
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchn <- catch.n(sim)
CAT <- adply(catchn,.margins = c(2,3,4),summarise, X25 = quantile(ab, probs = 0.025), X75 = quantile(ab, probs = 0.975))
library(plyr)
CAT <- adply(catchn,.margins = c(2,3,4),summarise, X25 = quantile(ab, probs = 0.025), X75 = quantile(ab, probs = 0.975))
data(baseball)
head(baseball)
CAT <- adply(catchn,.margins = c(2,3,4),summarise, X25 = quantile(catchn[1,,,], probs = 0.025), X75 = quantile(ab, probs = 0.975))
quant25 <- function(x){
quantile(x = x,probs = 0.025)
}
xx <- adply(sim@catch.n,c(2,3,4),.fun = quant25)
View(xx)
sim@controle@value[6]
library(DEPLr)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
sim <- run(sim)
cpue <- summary(object = sim,"cpue")
View(cpue)
matplot(x = cpue$week,y = cpue[,c(4,6,8)],type = "l")
matplot(y = cpue[,c(4,6,8)],type = "l")
matplot(y = cpue[1:19,c(4,6,8)],type = "l")
melt(cpue[1:19,c(4,6,8)])
library(reshape2)
melt(cpue[1:19,c(4,6,8)])
library(ggplot2)
melt(cpue[1:19,c(4,6,8)])
ggplot(melt(cpue[1:19,c(4,6,8)]),aes(x = paste("W",1:19,sep=""),y = value,group=variable)) +geom_line()
ggplot(melt(cpue[1:19,c(4,6,8)]),aes(y = value,group=variable)) +geom_line()
ggplot(melt(cpue[1:19,c(4,6,8)]),aes(y = value,group=variable))
ggplot(melt(cpue[1:19,c(4,6,8)]))+geom_line(mapping =ase(y=value,fill=variable))
ggplot(melt(cpue[1:19,c(4,6,8)]))+geom_line(mapping =aes(y=value,fill=variable))
ggplot(data = melt(cpue[1:19,c(4,6,8)]))+geom_line(mapping =aes(y=value,fill=variable))
dt <- melt(cpue[1:19,c(4,6,8)]
)
View(dt)
ggplot(data =dt )+geom_line(mapping =aes(y=value,fill=variable))
View(dt)
View(cpue)
dt <- melt(cpue[1:19,c(4,6,8),,id.vars = week]
ggplot(data =dt)+geom_line(mapping =aes(y=value,fill=variable))
dt <- melt(cpue[1:19,c(4,6,8),id.vars = week]
)
dt <- melt(cpue[1:19,c(1,4,6,8),id.vars = week])
View(cpue)
View(cpue)
head(cpue)
cpue
head(cpue)
ggplot(cpue, aes(week)) +
geom_line(aes(y =4, colour = "2.5%")) +
geom_line(aes(y =6, colour = "median")) +
geom_line(aes(y =8, colour = "97.5"))
ggplot(cpue, aes(week)) +
geom_line(aes(y =cpue[,4], colour = "2.5%")) +
geom_line(aes(y =cpue[,6], colour = "median")) +
geom_line(aes(y =cpue[,8], colour = "97.5"))
test_data <- data.frame(
var0 = 100 + c(0, cumsum(runif(49, -20, 20))),
var1 = 150 + c(0, cumsum(runif(49, -10, 10))),
date = seq.Date(as.Date("2002-01-01"), by="1 month", length.out=100))
View(test_data)
ggplot(test_data, aes(date)) +
geom_line(aes(y = var0, colour = "var0")) +
geom_line(aes(y = var1, colour = "var1"))
head(test_data)
names(cpue)[4]
names(cpue)[4] <- "IC_2.5"
names(cpue)[8] <- "IC_97.5"
head(test_data)
names(cpue)
ggplot(cpue, aes(week)) +
geom_line(aes(y =IC_2.5, colour = "2.5%")) +
geom_line(aes(y =cpue[,6], colour = "median")) +
geom_line(aes(y =IC_97.5, colour = "97.5"))
ggplot(cpue, aes(week)) +
geom_line(aes(y =IC_2.5, colour = "2.5%")) +
geom_line(aes(y =median, colour = "median")) +
geom_line(aes(y =IC_97.5, colour = "97.5"))
ggplot(cpue) + geom_line(aes(y = median)) + geom_smooth()
ggplot(cpue) + geom_line(aes(x = week,y = median)) + geom_smooth()
ggplot(cpue) + geom_line(aes(y = median)) + geom_smooth()
ggplot(cpue) + geom_line(aes(y = median))
library(DEPLr)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
View(stockN)
View(stockN)
View(stockN)
View(stockN)
library(DEPLr)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp")
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
cpue <- summary(object = sim,"cpue")
View(cpue)
View(stockN)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014.inp")
sim <- run(sim)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014.inp")
sim <- run(sim)
library(DEPLr)
sim <- run(sim)
library(DEPLr)
library('rjags')
df <- read.csv(file.path('data','normal','normal_mean.csv'))
file.path("A","B","C")
library(DEPLr)
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
tmp <- read.sim("/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
read.sim <- function(file){
if(!checkExt(file)){
return("Error: The extintion of the do not match the correct form")
}else{
dat=scan(file = file,what = "character",sep = "\n")
LW <- as.numeric(str_split(string = str_split(string = dat[3],pattern = "#")[[1]][1],pattern = ",")[[1]][1:2])
GF <- as.numeric(str_split(string = str_split(string = dat[4],pattern = "#")[[1]][1],pattern = ",")[[1]][1:2])
cstNM <- as.numeric(str_split(string = dat[5],pattern = " ")[[1]][1])
valNM <- as.numeric(str_split(string = dat[6],pattern = " ")[[1]][1])
proErr <- as.numeric(str_split(string = dat[7],pattern = " ")[[1]][1])
obsErr <- as.numeric(str_split(string = dat[8],pattern = " ")[[1]][1])
nbrSim <- as.numeric(str_split(string = dat[9],pattern = " ")[[1]][1])
season <- as.numeric(str_split(string = dat[10],pattern = " ")[[1]][1])
nbrFleet <- as.numeric(str_split(string = dat[11],pattern = " ")[[1]][1])
nbrZone <- as.numeric(str_split(string = dat[12],pattern = " ")[[1]][1])
discard <- as.numeric(str_split(string = dat[13],pattern = " ")[[1]][1])
recTot <- as.numeric(str_split(string = dat[14],pattern = " ")[[1]][1])
initLenghts <- as.numeric(str_split(string = str_split(string = dat[15],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
propRec<- as.numeric(str_split(string = str_split(string = dat[16],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
initAbund <- as.numeric(str_split(string = str_split(string = dat[17],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
catchability <- as.numeric(str_split(string = str_split(string = dat[18],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
codeData <- str_trim(as.character(str_split(string = dat[19],pattern = "#")[[1]][1]))
fleetName <- as.character(str_trim(str_split(string = str_split(string = dat[20],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone]))
zoneName <- rep("",nbrZone)
dt.array <- array(data = NA,dim = c(season,nbrZone+2,nbrZone))
index=1
j=0
while(index<nbrZone+1){
j=21+(index-1)*(season+1)
zoneName[index]=str_trim(as.character(str_split(string = dat[j],pattern = " ")[[1]][1]))
for(i in 1:season){
dt.array[i,,index] <-  as.numeric(unlist(str_split(string = str_split(string = dat[j+i],pattern = c(" "))[[1]],pattern = "\t")))
}
index=index+1
}
}
dataList=list("LW"=LW,"GF"=GF,"cstNM"=cstNM,"valNM"=valNM,"proErr"=proErr,"obsErr"=obsErr,"nbrSim"=nbrSim,"season"=season,"nbrFleet"=nbrFleet,"nbrZone"=nbrZone,"discard"=discard,"recTot"=recTot,"initLenghts"=initLenghts,"propRec"=propRec,"initAbund"=initAbund,"catchability"=catchability,"codeData"=codeData,"fleetName"=fleetName,"zoneName"=zoneName,"dt.array"=dt.array)
return(dataList)
}
tmp <- read.sim("/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
getExt <- function(file)
tolower(substr(file,max(gregexpr("\\.", file)[[1]])+1,nchar(file)))
checkExt=function(x) (tolower(getExt(x))=="inp")
tmp <- read.sim("/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
library(stringr)
tmp <- read.sim("/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014.inp")
sim@zones@data
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
sim@zones@data
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014.inp")
sim@zones@data
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
sim@zones@fleet@n
sim@zones@fleet@name
sim@zones@fleet@catchability
#' A function that allow reading an input simulation file
#'
#' @description Read a simulation input file
#' @import stringr
#' @param x : path of the input file
read.sim <- function(file){
if(!checkExt(file)){
return("Error: The extintion of the do not match the correct form")
}else{
dat=scan(file = file,what = "character",sep = "\n")
LW <- as.numeric(str_split(string = str_split(string = dat[3],pattern = "#")[[1]][1],pattern = ",")[[1]][1:2])
GF <- as.numeric(str_split(string = str_split(string = dat[4],pattern = "#")[[1]][1],pattern = ",")[[1]][1:2])
cstNM <- as.numeric(str_split(string = dat[5],pattern = " ")[[1]][1])
valNM <- as.numeric(str_split(string = dat[6],pattern = " ")[[1]][1])
proErr <- as.numeric(str_split(string = dat[7],pattern = " ")[[1]][1])
obsErr <- as.numeric(str_split(string = dat[8],pattern = " ")[[1]][1])
nbrSim <- as.numeric(str_split(string = dat[9],pattern = " ")[[1]][1])
season <- as.numeric(str_split(string = dat[10],pattern = " ")[[1]][1])
nbrFleet <- as.numeric(str_split(string = dat[11],pattern = " ")[[1]][1])
nbrZone <- as.numeric(str_split(string = dat[12],pattern = " ")[[1]][1])
discard <- as.numeric(str_split(string = dat[13],pattern = " ")[[1]][1])
recTot <- as.numeric(str_split(string = dat[14],pattern = " ")[[1]][1])
initLenghts <- as.numeric(str_split(string = str_split(string = dat[15],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
propRec<- as.numeric(str_split(string = str_split(string = dat[16],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
initAbund <- as.numeric(str_split(string = str_split(string = dat[17],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
catchability <- as.numeric(str_split(string = str_split(string = dat[18],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone])
codeData <- str_trim(as.character(str_split(string = dat[19],pattern = "#")[[1]][1]))
fleetName <- as.character(str_trim(str_split(string = str_split(string = dat[20],pattern = "#")[[1]][1],pattern = ",")[[1]][1:nbrZone]))
zoneName <- rep("",nbrZone)
dt.array <- array(data = NA,dim = c(season,nbrFleet+2,nbrZone))
index=1
j=0
while(index<nbrZone+1){
j=21+(index-1)*(season+1)
zoneName[index]=str_trim(as.character(str_split(string = dat[j],pattern = " ")[[1]][1]))
for(i in 1:season){
dt.array[i,,index] <-  as.numeric(unlist(str_split(string = str_split(string = dat[j+i],pattern = c(" "))[[1]],pattern = "\t")))
}
index=index+1
}
}
dataList=list("LW"=LW,"GF"=GF,"cstNM"=cstNM,"valNM"=valNM,"proErr"=proErr,"obsErr"=obsErr,"nbrSim"=nbrSim,"season"=season,"nbrFleet"=nbrFleet,"nbrZone"=nbrZone,"discard"=discard,"recTot"=recTot,"initLenghts"=initLenghts,"propRec"=propRec,"initAbund"=initAbund,"catchability"=catchability,"codeData"=codeData,"fleetName"=fleetName,"zoneName"=zoneName,"dt.array"=dt.array)
return(dataList)
}
getExt <- function(file)
tolower(substr(file,max(gregexpr("\\.", file)[[1]])+1,nchar(file)))
checkExt=function(x) (tolower(getExt(x))=="inp")
tmp <- read.sim(file =  "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
sim@zones@n
controle(sim)
tmp$valNM
tmp$proErr
tmp$obsErr
tmp$season
tmp$nbrFleet
tmp$nbrZone
tmp$fleetName
tmp$catchability
library(DEPLr)
sim=DEPLSim(file = "/home/benmhamed/INRH/INRH_WG/WG sur Les cephalopode (13-18 Avril 2015)/Simulations/Eté/input files/Eté2014 (A-cote).inp")
class(sim)
sim@controle
sim@zones
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
cpue <- summary(object = sim,"cpue")
View(cpue)
View(catchWT)
getwd()
write.csv(catchWT,"catchwt.csv")
library(DEPLr)
library(DEPLr)
remove.packages('DEPLr')
library(DEPLr)
library(DEPLr)
direc <- "/home/benmhamed/INRH/INRH_Octopus/My_Models/Bayes Model with rjags/A-Côte [rjags]/DEPLr"
library(DEPLr)
sim=DEPLSim(file = paste(direc,"input files/A-Cote [Validation].inp",sep="/"))
sim <- run(sim)
library(DEPLr)
direc <- "/home/benmhamed/INRH/INRH_Octopus/My_Models/Bayes Model with rjags/A-Côte [rjags]/DEPLr"
library(DEPLr)
sim=DEPLSim(file = paste(direc,"input files/A-Cote [Validation].inp",sep="/"))
sim <- run(sim)
library(DEPLr)
sim <- run(sim)
library(DEPLr)
direc <- "/home/benmhamed/INRH/INRH_Octopus/My_Models/Bayes Model with rjags/A-Côte [rjags]/DEPLr"
library(DEPLr)
sim=DEPLSim(file = paste(direc,"input files/A-Cote [Validation].inp",sep="/"))
sim <- run(sim)
catchN <- summary(object = sim,"catch.n")
catchWT <- summary(object = sim,"catch.wt")
stockN <- summary(object = sim,"stock.n")
stockWT <- summary(object = sim,"stock.wt")
cpue <- summary(object = sim,"cpue")
setwd(dir = paste(direc,"Results/Data",sep="/"))
write.csv(catchN,"catchN.csv")
write.csv(catchWT,"catchWT.csv")
write.csv(stockN,"stockN.csv")
write.csv(stockWT,"stockWT.csv")
write.csv(cpue,"cpue.csv")
install.packages("R.rsp")
library(DEPLr)
??DEPLr
?DEPLr
library(DEPLr)
library(DEPLr)
vignette('DEPLr')
vignette(topic = 'DEPLr')
vignette(topic = "DEPLr")
?DEPLr
??DEPLr
library(DEPLr)
