{
    "contents" : "setGeneric(name = \"run\",def = function(object){\n  standardGeneric(f = \"run\")\n})\n#'run\n#'@description run a DEPLSim object.\n#'@return DEPLSim object\n#'@import data.table\n#'@import stats\n#'@export\n#'\nsetMethod(f = \"run\",signature = \"DEPLSim\",definition = function(object){\n  pr <- object@controle@value ### Controle parameters\n  l0 <- object@zones@initLength  ### intial length in each zone\n  N0 <- object@zones@initAbund   ### intial abundance in each zone\n  ri <- object@zones@propRec     ### proportion of recruitment for each zone\n  fl <- object@zones@fleet@name  ### fleet names\n  qi <- object@zones@fleet@catchability  ### catchability of each fleet\n  Ri <- cbind(object@zones@data[,pr[8]+1,1:pr[8]]) ### Distribution of recruitment over the season\n  Zi <- sim@zones@name   ### Zones names\n  nz <- pr[8]\n  ns <- pr[5]\n  nf <- pr[7]\n  nw <- pr[6]\n  if(pr[1]==1){\n    Mi <- matrix(rep(pr[2],nz*nw),ncol=nz,nrow=nw)\n  }else{\n    Mi <- cbind(object@zones@data[,nf+2,1:nz])\n  }\n  Pt <- growth(object)   ### Theorical weigth over octopus life\n  Pi <- LW(length =l0,object)   ### intial weights\n  t0 <- age0(Ptheo = Pt,Pi=Pi)\n  t0 <- t0+pr[9]\n  P0 <- Pt[t0]\n  B0 <- (N0*P0)/1e+06  ### intital biomasses\n  Eff <- object@zones@data\n  #sigma2p <- log(pr[3]^2+1)\n  #sigma2o <- log(pr[4]^2+1)\n  sigma2p <- pr[3]\n  sigma2o <- pr[4]\n  t <- 0\n  d <- nz*ns\ndimname1 <- list(paste(\"iter\",1:ns,sep=\"\"),paste(\"week\",1:nw,sep=\"\"),fl,Zi)\ndimname2 <- list(paste(\"iter\",1:ns,sep=\"\"),paste(\"week\",0:nw,sep=\"\"),Zi)\ncatch.n <- array(data = NA,dim = c(ns,nw,nf,nz));dimnames(catch.n) <- dimname1\ncatch.wt <- array(data = NA,dim = c(ns,nw,nf,nz));dimnames(catch.wt) <- dimname1\nstock.n <- array(data = NA,dim = c(ns,nw+1,nz));dimnames(stock.n) <- dimname2\nstock.wt <- array(data = NA,dim = c(ns,nw+1,nz));dimnames(stock.wt) <- dimname2\ncpue <- array(data = NA,dim = c(ns,nw,nf,nz));dimnames(cpue) <- dimname1\n  for(i in 1:ns){ ### simulations\n    for(j in 1:nz){  ### zones\n      t <- t+1\n      x <- t/d\n      progressBar(x)\n      stock.n[i,1,j] <- N0[j]\n      stock.wt[i,1,j] <- B0[j]\n      for(k in 1:nw){  ### season\n        catchTot <- 0\n        for(l in 1:nf){  ### fleets\n          catchNm <- qi[l]*Eff[k,l,j]*stock.n[i,k,j]*exp(-Mi[k,j]/2) \n          LogcatchNm<-log(catchNm)\n          LogcatchN <- rnorm(mean = LogcatchNm, sd = sigma2o^(0.5), n=1)\n          catch.n[i,k,l,j] <- exp(LogcatchN)\n          catch.wt[i,k,l,j] <-(catch.n[i,k,l,j]*Pt[t0[j]+k-1])/1e03\n          if(Eff[k,l,j]>0){\n            cpue[i,k,l,j] <- catch.wt[i,k,l,j]/Eff[k,l,j]\n          }else{\n            cpue[i,k,l,j] <- 0 \n          }\n          catchTot <- catchTot+catch.n[i,k,l,j] \n        }\n        Nm <- max(stock.n[i,k,j]*exp(-Mi[k,j]) - catchTot*exp(-Mi[k,j]/2) + Ri[k,j]*pr[10]*ri[j]*exp(-Mi[k,j]/2),1)\n        logNm <- log(Nm)\n        logN <- rnorm(mean=logNm,sd=sigma2p^(0.5), n=1)\n        stock.n[i,k+1,j] <- exp(logN)\n        stock.wt[i,k+1,j] <- (stock.n[i,k+1,j]*Pt[t0[j]+k])/1e06\n      }\n    }\n  }\nobject@catch.n <- catch.n\nobject@catch.wt <- catch.wt\nobject@stock.n <- stock.n\nobject@stock.wt <- stock.wt\nobject@cpue <- cpue\n  return(object)\n}) \n\n",
    "created" : 1429700820680.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "353122196",
    "id" : "C3B4BF16",
    "lastKnownWriteTime" : 1429630379,
    "path" : "~/Wahid/my_packages/DEPLr/R/run.R",
    "project_path" : "R/run.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "source_on_save" : false,
    "type" : "r_source"
}