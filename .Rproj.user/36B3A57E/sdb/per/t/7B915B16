{
    "contents" : "---\ntitle: \"DEPLr: A Simulation Depletion Model for Octopus\"\nauthor: \"Abdelouahed BEN MHAMED\"\ndate: \"`r Sys.Date()`\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{DEPLr}\n  %\\VignetteEngine{knitr::rmarkdown}\n  \\usepackage[utf8]{inputenc}\n  \n---\n\n# Introduction\n\nDEPLr is an implementation of a Monte Carlo simulation depletion model applied to octopus. This package allow the user to project the population of a stock, or different stocks of octopus with no interaction, in the future and get a summary of the state of the population. It also provides different outputs like:\n\n1. The path of the abundance of the stock along the fishing season\n2. The path of the biomass for each zone\n3. The catch in number and weight along the weeks of the fishing season for each zone and fleet\n4. And the cpue of each fleet in each zone\n\n\n# Input file\n\nThere is an example of the input file in the package that could be uploaded using the _*DEPLSim*_ method. This input file include all basic elements needed to run the simulation model.\n\n```{r}\nlibrary(DEPLr)\nsim=DEPLSim(file = \"/home/benmhamed/Wahid/my_packages/DEPLr/input/sim1.inp\")\nclass(sim)\n```\n\nTo have an overveiw of the DEPLSim object _sim_ we write:\n\n```{r}\nstr(sim)\n```\n\nAs you can see, there are eight main feilds in the DEPLSim object which we are going to present briefly:\n\n1. _controle_: This slot is a _DEPLPar_ object which contains some parameters of the simulation model. To look further on it type _controle(sim)_. We used _knitr::kable_ just for formating the table to look like this:\n\n```{r,results='asis'}\nknitr::kable(controle(sim))\n```\n\n2. _params_: this slot is a _DEPLPar_ object which contains the parameters of the _Length-Weight_ relationship and the parameters of the _Growth_ function of the octopus.\n\n3. _zones_: this slot is a _DEPLZone_ object. To have access to it we can use the following _script_:\n\n```{r,fig.align='center',fig.width=8,fig.height=6}\nzone <- zones(sim)\n# Get the names of zones\nnames(zone)\n# plot the proportion of initial abundance in each zone\nplot(zone)\n```\n\n\nTo get the fleets exploiting the zones we type:\n\n\n```{r}\n# Get the fleets exploiting the zones \nfleet <- fleet(zone)\n# To obtain names of each fleet\nnames(fleet)\n# To obtain the catchability of each fleet\ncatchability(fleet)\n# To display the Fleets with their catchabilities in a data.frame\nas.data.frame(fleet)\n\n```\n\nThe last five fields of the DEPLSim object _sim_ are _catch.n__, _catch.wt_, _stock.n_, _stock.wt_ and _cpue_. These could be accessed with:\n\n```{r}\ncatch.n(sim)\ncatch.wt(sim)\nstock.n(sim)\nstock.wt(sim)\nindex(sim)\n```\n\nAs you can see, these objects are empty, so to have them full, we have to run the simulation model using _run_ method:\n\n```{r,echo=FALSE,cache=TRUE,results='hide'}\n sim <- run(sim)\n```\n```{r}\n# sim <- run(sim)\n```\n 3239 3397\n\nAfter runing the model you can se that the empty feilds are now having values. To ge summaries of the stock abundance, biomass, the catch in numbers and weight, and the cpue we use the following _script_:\n\n```{r}\n# Computing a summary of the catch in numbers\ncatchN <- summary(object = sim,\"catch.n\")\ncatchWT <- summary(object = sim,\"catch.wt\")\nstockN <- summary(object = sim,\"stock.n\")\nstockWT <- summary(object = sim,\"stock.wt\")\ncpue <- summary(object = sim,\"cpue\")\nhead(catchN)\n\n```\n\n```{r,fig.width=7,fig.height=4}\nlibrary(ggplot2)\nggplot(cpue, aes(week, median, fill = fleet)) +\n   geom_bar(position = \"dodge\",stat=\"identity\") + \n  facet_grid(facets = zone~.,scales=\"free_y\") + \n  ggtitle(\"CPUE of different fleets in the different zones\")\n\n```\n\n```{r,fig.width=7,fig.height=4}\nggplot(stockN, aes(week, median)) +\n   geom_bar(aes(fill=median),stat=\"identity\") + \n  facet_grid(facets = zone~.,scales=\"free_y\") + \n  ggtitle(\"Abundance\")\n\n```\n\n```{r,fig.width=7,fig.height=4}\nggplot(stockWT, aes(week, median)) +\n   geom_bar(aes(fill=median),stat=\"identity\") + \n  facet_grid(facets = zone~.,scales=\"free_y\") + \n  ggtitle(\"Biomass (t)\")\n\n```\n\n\n\n```{r,fig.width=7,fig.height=4}\nlibrary(plyr)\nlibrary(reshape2)\nabundance <- stock.n(sim)\ncpue <- index(sim)\ndtN <- adply(.data = abundance,.margins = c(1,2,3),.fun = identity) \nnames(dtN) <- c(\"iter\",\"week\",\"zone\",\"value\")\nggplot(dtN, aes(week, value)) +\n   geom_boxplot() + \n  facet_grid(facets = zone~.,scales=\"free_y\") + \n  ggtitle(\"Abundance \")\n\nbiomass <- stock.wt(sim)\ndtB <- adply(.data = biomass,.margins = c(1,2,3),.fun = identity) \nnames(dtB) <- c(\"iter\",\"week\",\"zone\",\"value\")\nggplot(dtB, aes(week, value)) +\n   geom_boxplot() +\n  facet_grid(facets = zone~.,scales=\"free_y\") + \n  ggtitle(\"Biomass\")\n\n```\n\n```{r,fig.width=7,fig.height=4}\ncpue <- index(sim)\ndtcpue <- adply(.data = cpue,.margins = c(1,2,3,4),.fun = identity)\nnames(dtcpue) <- c(\"iter\",\"week\",\"fleet\",\"zone\",\"value\")\nggplot(dtcpue, aes(week, value)) +\n   geom_boxplot() +\n  facet_wrap(facets = zone~fleet,scales=\"free\") + \n  ggtitle(\"CPUE (kg)\")\n\ncatchn <- catch.n(sim)\ndtcatchn <- adply(.data = catchn,.margins = c(1,2,3,4),.fun = identity)\nnames(dtcatchn) <- c(\"iter\",\"week\",\"fleet\",\"zone\",\"value\")\nggplot(dtcatchn, aes(week, value)) +\n   geom_boxplot() +\n  facet_wrap(facets = zone~fleet,scales=\"free\") + \n  ggtitle(\"Catch in Number\")\n\ncatchwt <- catch.wt(sim)\ndtcatchwt <- adply(.data = catchwt,.margins = c(1,2,3,4),.fun = identity)\nnames(dtcatchwt) <- c(\"iter\",\"week\",\"fleet\",\"zone\",\"value\")\nggplot(dtcatchwt, aes(week, value)) +\n   geom_boxplot() +\n  facet_wrap(facets = zone~fleet,scales=\"free\") + \n  ggtitle(\"Yeild (kg)\")\n```\n\n",
    "created" : 1429784660973.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3879995558",
    "id" : "7B915B16",
    "lastKnownWriteTime" : 1429785708,
    "path" : "~/Wahid/my_packages/DEPLr/vignettes/DEPLr.Rmd",
    "project_path" : "vignettes/DEPLr.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}